{"version":3,"file":"static/js/230.34f65bc9.chunk.js","mappings":"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","sources":["components/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["const MovieCard = ({ movie }) => {\n  return (\n    <div className=\"movie-details\">\n      <h1>{movie.title}</h1>\n      <p>{movie.tagline}</p>\n\n      <div className=\"movie-info\">\n        <div className=\"poster\">\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n            width=\"350\"\n          />\n        </div>\n\n        <div className=\"details\">\n          <p>\n            <strong>Release Date:</strong> {movie.release_date}\n          </p>\n          <p>\n            <strong>Runtime:</strong> {movie.runtime} minutes\n          </p>\n          <p>\n            <strong>Genres:</strong>{' '}\n            {movie.genres.map(genre => genre.name).join(', ')}\n          </p>\n          <p>\n            <strong>Overview:</strong> {movie.overview}\n          </p>\n          <p>\n            <strong>IMDB Rating:</strong> {movie.vote_average}\n          </p>\n          <p>\n            <strong>Production Companies:</strong>{' '}\n            {movie.production_companies.map(company => company.name).join(', ')}\n          </p>\n          <p>\n            <strong>Spoken Languages:</strong>{' '}\n            {movie.spoken_languages.map(language => language.name).join(', ')}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 14px;\n\n  font-weight: 500;\n  font-size: 18px;\n\n  border-radius: 4px;\n  text-decoration: none;\n\n  cursor: pointer;\n\n  &.active {\n    color: white;\n    background-color: black;\n  }\n`;\n","import MovieCard from 'components/MovieCard';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/fetchMovies';\nimport { StyledNavLink } from './MovieDetails.styled';\nimport Loader from 'components/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={backLink}>‚Üê Go back</Link>\n      <MovieCard movie={movieDetails} state={{ from: location }} />\n      <ul>\n        <StyledNavLink to={'cast'}>Cast</StyledNavLink>\n        <StyledNavLink to={'reviews'}>Reviews</StyledNavLink>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '20e13b9a04a0b41c58cfa9dd598a635c',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["movie","className","title","tagline","src","poster_path","alt","width","release_date","runtime","genres","map","genre","name","join","overview","vote_average","production_companies","company","spoken_languages","language","StyledNavLink","styled","NavLink","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","getMovieDetails","then","backLink","state","from","to","Suspense","fallback","Loader","searchParams","URLSearchParams","api_key","include_adult","axios","getTrendingMovies","data","results","getMovieByName","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}