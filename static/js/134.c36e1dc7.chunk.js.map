{"version":3,"file":"static/js/134.c36e1dc7.chunk.js","mappings":"wMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,8BAAII,QAAJ,IAAIA,EAAAA,EAASC,OAFRF,EADC,KASjB,C,6FCmBD,UA9Be,WACb,OAA4BM,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAeH,GAAOI,KAAKR,EAC5B,GAAE,CAACI,IASJ,OACE,iCACE,kBAAMK,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAAgB,CAAEC,MAAOQ,EAAKE,SAASV,MAAMW,QAC7CH,EAAKI,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,SAAsB,cAGvB5B,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C,mMC/BKa,EAAe,IAAIiB,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,4BAA+BrB,IADvB,uBACvBuB,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBnB,EAAc,mCAAG,WAAMW,GAAN,yFACLK,EAAAA,EAAAA,IAAA,wBACJrB,EADI,kBACkBgB,IAFb,uBACpBO,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,YAA+B1B,IADzB,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuC1B,IADpC,uBAClBuB,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuC1B,IADjC,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/MoviesList.jsx","pages/Movies.jsx","services/fetchMovies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title, original_name }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <p>{title ?? original_name}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { MoviesList } from 'components/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/fetchMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    getMovieByName(query).then(setMovies);\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '20e13b9a04a0b41c58cfa9dd598a635c',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","original_name","to","state","from","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieByName","then","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}