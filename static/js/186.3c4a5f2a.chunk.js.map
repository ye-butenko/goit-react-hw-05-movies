{"version":3,"file":"static/js/186.3c4a5f2a.chunk.js","mappings":"4MA6BA,UAxBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAC/B,GAAE,CAACJ,IAECG,GAKH,wBACGA,EAAaK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OAChB,2BACE,wBAAKA,KACL,cAAGC,wBAAyB,CAAEC,OAAQH,OAF/BD,EADO,OALb,SAAC,IAAD,GAaV,C,mMCzBKK,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,4BAA+BL,IADvB,uBACvBO,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBU,IAFb,uBACpBH,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdG,EAAe,mCAAG,WAAMzB,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,YAA+Bc,IADzB,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAY,mCAAG,WAAM1B,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCc,IADpC,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKM,MAFc,2CAAH,sDAKZrB,EAAe,mCAAG,WAAMN,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCc,IADjC,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/fetchMovies.js"],"sourcesContent":["import Loader from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return <Loader />;\n  }\n\n  return (\n    <ul>\n      {movieReviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <h3>{author}</h3>\n          <p dangerouslySetInnerHTML={{ __html: content }} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '20e13b9a04a0b41c58cfa9dd598a635c',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?${searchParams}`);\n  return data.results;\n};\n\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?${searchParams}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","map","id","content","author","dangerouslySetInnerHTML","__html","searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieByName","name","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}